import notears
import numpy as np
import bnlearn as bn

def bnlearn_setup(train_data, training_n, test_n):
    edges = [('A', 'E'),
             ('B', 'E'),
             ('C', 'E'),
             ('D', 'E')]
    DAG = bn.structure_learning.fit(train_data[0:100], fixed_edges=edges)
    DAG = bn.parameter_learning.fit(DAG, train_data[0:100], verbose=0)
    bn_train_output = bn.sampling(DAG, training_n)
    bn_test_output = bn.sampling(DAG, test_n)
    np.savetxt('Z_est_train.csv', bn_train_output, delimiter=',')
    np.savetxt('Z_est_test.csv', bn_test_output, delimiter=',')

def bnlearn_setup_ex(train_data, training_n, test_n):
    edges = [('A', 'E'),
             ('B', 'E'),
             ('C', 'E'),
             ('D', 'E')]
    DAG = bn.structure_learning.fit(train_data[0:100], methodtype='ex', fixed_edges=edges)
    DAG = bn.parameter_learning.fit(DAG, train_data[0:100], verbose=0)
    bn_train_output = bn.sampling(DAG, training_n)
    bn_test_output = bn.sampling(DAG, test_n)
    np.savetxt('Z_est_train.csv', bn_train_output, delimiter=',')
    np.savetxt('Z_est_test.csv', bn_test_output, delimiter=',')
